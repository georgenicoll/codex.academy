name: GitHub Actions Demo Follow Along
on: push
jobs:
#  ___  _    __ ___  ___             
# |  _>| |  / /|  _>| . \            
# | <__| | / / | <__| | |            
# `___/|_|/_/  `___/|___/            
                                   
#  ___           _       _           
# |_ _|_ _  ___ <_>._ _ <_>._ _  ___ 
#  | || '_><_> || || ' || || ' |/ . |
#  |_||_|  <___||_||_|_||_||_|_|\_. |
#                               <___'

  build:
    needs: [ security-audit ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-        
        
      - name: Install Dependencies
        run: npm i

      - name: Build the code
        run: npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: website-dist
          path: dist

  test:
    needs: [ build ] 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-        
        
      - name: Install Dependencies
        run: npm i

      - name: Test the code
        run: npm run test

  lint:
    needs: [ build ] 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-        
        
      - name: Install Dependencies
        run: npm i

      - name: Lint the code
        run: echo Lint not working #npm run lint

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Check for security issue
        run: echo Byron should do this #npm audit --audit-level=critical #or "high"
        
  static-analysis:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v1

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      - name: Perform Analysis
        uses: github/codeql-action/analyze@v1

#  ___  _    __ ___  ___                             
# |  _>| |  / /|  _>| . \                            
# | <__| | / / | <__| | |                            
# `___/|_|/_/  `___/|___/                            
                                                   
#  ___            _                              _   
# | . \ ___  ___ | | ___  _ _ ._ _ _  ___ ._ _ _| |_ 
# | | |/ ._>| . \| |/ . \| | || ' ' |/ ._>| ' | | |  
# |___/\___.|  _/|_|\___/`_. ||_|_|_|\___.|_|_| |_|  
#           |_|          <___'                       

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ test, lint, static-analysis]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1

      - name: Store Artifact
        uses: actions/download-artifact@v2
        with:
          name: website-dist
          path: dist

      # Would do this for a full deploy
      # - name: Publish
      #   uses: JamesIves/github-pages-deploy-action@releases/v3
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     BRANCH: gh-pages
      #     FOLDER: dist
